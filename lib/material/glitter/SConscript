Import('env')
from os import path

modName = path.basename(path.abspath('..'))
libName = path.basename(path.abspath('.'))
name    = modName + "_" + libName

# --------------------------------------------------------------------------

incdir      = [
                env.Dir('../../').srcnode(),
                env.Dir('../glitter'),
                env.Dir('.'),
                env.Dir('./ispc')
              ]

# for this option to take affect, it must be added *before* we add the ispc sources.
env.AppendUnique(ISPCFLAGS = ['--opt=force-aligned-memory'],
                 CPPPATH=incdir)

components  = [
    'common_interpolation',
    'common_noise',
    'map_primvar',
    'rendering_rndr',
    'scene_rdl2',
    'bvh_shading_ispc',
    'shading_ispc'
]

env.DWAUseComponents(components)

sources, header = env.IspcShared(['ispc/Glitter.ispc'])
sources     += env.DWAGlob('*.cc')
public_headers = ['Glitter.h',
                  'ispc/Glitter_ispc_stubs.h']
public_ispc_headers = ['ispc/Glitter.isph']

# --------------------------------------------------------------------------
env.DWAInstallInclude(public_headers, 'moonshine/material/glitter')
env.DWAInstallInclude(public_ispc_headers, 'moonshine/material/glitter/ispc')
env.AppendUnique(CPPPATH = [env.Dir('.'),
                            env.Dir('$BUILD_DIR/lib')])
lib = env.DWASharedLibrary(name, sources)
target = env.DWAInstallLib(lib)
env.DWAComponent(name, LIBS=target, CPPPATH=incdir, COMPONENTS=components)
env.DWAInstallSConscriptStub(name, LIBS=target,
                             CPPPATH=[env.Dir('$INSTALL_DIR/include')],
                             COMPONENTS=components)
env.DWALinkValidate(name)

# TODO: re-write code to avoid performance warnings
env.AppendUnique(ISPCFLAGS = ['--wno-perf'])
