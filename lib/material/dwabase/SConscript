Import('env')
from os import path

modName = path.basename(path.abspath('..'))
libName = path.basename(path.abspath('.'))
name    = modName + "_" + libName

# --------------------------------------------------------------------------

# for this option to take affect, it must be added *before* we add the ispc sources.
env.AppendUnique(ISPCFLAGS = ['--opt=force-aligned-memory'])

components  = [
    'rendering_bvh_shading',
    'rendering_shading',
    'scene_rdl2',
    'render_logging',
    'bvh_shading_ispc',
    'shading_ispc',
    'common_noise',
    'material_glitter',
]

env.DWAUseComponents(components)

sources, header = env.IspcShared(['ispc/DwaBaseLayerable.ispc',
                                  'ispc/DwaBase.ispc', 
                                  'ispc/Blending.ispc'])
sources     += env.DWAGlob('*.cc')
public_headers = ['Blending.h',
                  'ispc/Blending_ispc_stubs.h',
                  'DwaBase.h',
                  'ispc/DwaBase_ispc_stubs.h',
                  'DwaBaseLayerable.h',
                  'ispc/DwaBaseLayerable_ispc_stubs.h']
public_ispc_headers = ['ispc/Blending.isph',
                       'ispc/DwaBase.isph',
                       'ispc/DwaBaseLayerable.isph']
                  
incdir      = [
                env.Dir('../../').srcnode(),
                env.Dir('../dwabase'),
                env.Dir('.'),
                env.Dir('./ispc')
               ]

# --------------------------------------------------------------------------
env.DWAInstallInclude(public_headers, 'moonshine/material/dwabase')
env.DWAInstallInclude(public_ispc_headers, 'moonshine/material/dwabase/ispc')
env.Append(CPPPATH=incdir)
env.AppendUnique(CPPPATH = [env.Dir('.'),
                            env.Dir('$BUILD_DIR/lib')])
lib = env.DWASharedLibrary(name, sources)
target = env.DWAInstallLib(lib)
env.DWAComponent(name, LIBS=target, CPPPATH=incdir, COMPONENTS=components)
env.DWAInstallSConscriptStub(name, LIBS=target,
                             CPPPATH=[env.Dir('$INSTALL_DIR/include')],
                             COMPONENTS=components)
env.DWALinkValidate(name)
