// Copyright 2023 DreamWorks Animation LLC
// SPDX-License-Identifier: Apache-2.0


#pragma once

#include <moonray/rendering/shading/ispc/Shading.isph>
#include <scene_rdl2/common/platform/IspcUtil.isph>

#include "Noise.isph"

// Structure to hold perlin simplex noise specific data
// Also includes SHADERS_NoiseBase for permutation table
struct NOISE_Simplex
{
    NOISE_Noise* mNoise;
};

// Returns single level of simplex noise for the passed in position
varying float NOISE_simplex3D(const uniform NOISE_Simplex * uniform n,
                              const varying Vec3f &pos,
                              const varying float angle,
                              varying Vec3f &noiseDerivatives);

// Returns single level of simplex noise for the passed in position with time component
varying float NOISE_simplex4D(const uniform NOISE_Simplex * uniform n,
                              const varying Vec4f &pos,
                              const varying float angle,
                              varying Vec4f &noiseDerivatives);

// Returns maxLevel number of accumulated simplex noise 
// for the passed in position
varying float NOISE_simplexFractal3D(const uniform NOISE_Simplex * uniform n,
                                     const varying Vec3f &pos,
                                     varying float angle,
                                     const varying float advection,
                                     const varying float maxLevel,
                                     const varying float persistence,
                                     const varying float lacunarity);

// Returns maxLevel number of accumulated simplex noise 
// for the passed in position with time component
varying float NOISE_simplexFractal4D(const uniform NOISE_Simplex * uniform n,
                                     const varying Vec4f &pos,
                                     varying float angle,
                                     const varying float advection,
                                     const varying float maxLevel,
                                     const varying float persistence,
                                     const varying float lacunarity);

