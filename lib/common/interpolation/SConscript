Import('env')
from os import path

modName = path.basename(path.abspath('..'))
libName = path.basename(path.abspath('.'))
name    = modName + "_" + libName

# --------------------------------------------------------------------------

# for this option to take affect, it must be added *before* we add the ispc sources.
env.AppendUnique(ISPCFLAGS = ['--opt=force-aligned-memory'])

components  = ['scene_rdl2', 'bvh_shading_ispc', 'shading_ispc']
env.DWAUseComponents(components)

sources, headers  = env.IspcShared([
        'ispc/Interpolation.ispc',
])

sources += env.DWAGlob('*.cc')

public_headers = ['Interpolation.h']
public_ispc_headers = ['ispc/Interpolation.isph'] + headers

incdir = [
    env.Dir('../../').srcnode(),
    env.Dir('.'),
    env.Dir('ispc')
]

# --------------------------------------------------------------------------

env.DWAInstallInclude(public_headers, 'moonshine/common/interpolation')
env.DWAInstallInclude(public_ispc_headers, 'moonshine/common/interpolation/ispc')
lib = env.DWASharedLibrary(name, sources)
target = env.DWAInstallLib(lib)
env.DWAComponent(name, LIBS=[target], CPPPATH=incdir, COMPONENTS=components)
env.DWAInstallSConscriptStub(name, LIBS=target,
                             CPPPATH=[env.Dir('$INSTALL_DIR/include')],
                             COMPONENTS=components)
env.DWALinkValidate(name)

# TODO: re-write code to avoid performance warnings
env.AppendUnique(ISPCFLAGS = ['--wno-perf'])
